<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_gui_border</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1000</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*
ablty itemms 
0 shot
1 = tri shot
2= shotgun
3= barrer
4 = sphere
5 = blast
6 = blade

*/
globalvar  maxablty;
maxablty = 8;

for (i = 0; i &lt; maxablty; i+= 1)
{
global.ablty[i] = -1;

}








</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//draw gui box

var x1,x2,y1,y2;
x1 = 0;
x2 = room_width;
y1 = room_height - 100;
y2 = room_height;

draw_rectangle_colour(x1,y1,x2,y2,c_maroon,c_maroon,c_navy,c_navy,false)


//bars
draw_healthbar(50,(room_height - 75),250,(room_height -55),global.energy,c_black, c_blue, c_green, 0, true, true);
draw_healthbar(50,(room_height - 50),250,(room_height -30),global.hp*10,c_black, c_red, c_lime, 0, true, true);


//ablty icons
    for (i = 0; i &lt; maxablty; i += 1)
    {
        draw_sprite (spr_border,0,(x2/2)+(i * 85),y1 + 3)
        if (global.ablty[i]!= -1)
        {
        draw_sprite(spr_ablty_icon,global.ablty[i],(x2/2)+(i * 85),y1 + 3)
        }
        
    }

  //drawing text   
draw_set_colour(c_white);
draw_set_font (font0);
draw_text(32,32,"Score  " + string(global.points));
//draw_text(32,64,"lives  " + string(global.life));
draw_text(50,(room_height - 75),"E" + string(global.energy));
//draw_text(32,256,"spawn count " + string(global.spawn_count));


//draw life
draw_sprite (spr_life,0,x+250,y1+25)
draw_text(x+300,y1+50,"X" + string(global.life));








</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
